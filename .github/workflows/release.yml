name: Build and Release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Get version
        id: version
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=nightly-$(date +'%Y%m%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64
          
      - name: Build
        run: |
          cd build
          cmake --build . --config Release
          
      - name: Package
        run: |
          mkdir artifacts
          cp build/Release/*.exe artifacts/
          cd artifacts
          7z a ../HapticEnvironment-windows-x64.zip *
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./HapticEnvironment-windows-x64.zip
          asset_name: HapticEnvironment-windows-x64-${{ needs.create-release.outputs.version }}.zip
          asset_content_type: application/zip

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libxcursor-dev \
            libxinerama-dev \
            libxrandr-dev \
            libxi-dev \
            libusb-1.0-0-dev \
            libasound2-dev \
            libx11-dev \
            libudev-dev
          
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          
      - name: Build
        run: |
          cd build
          make -j$(nproc)
          
      - name: Package
        run: |
          mkdir artifacts
          cp build/HapticEnvironment artifacts/
          cp build/messageHandler artifacts/
          cp build/chai3d-demo artifacts/
          cd artifacts
          tar czf ../HapticEnvironment-linux-x64.tar.gz *
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./HapticEnvironment-linux-x64.tar.gz
          asset_name: HapticEnvironment-linux-x64-${{ needs.create-release.outputs.version }}.tar.gz
          asset_content_type: application/gzip 